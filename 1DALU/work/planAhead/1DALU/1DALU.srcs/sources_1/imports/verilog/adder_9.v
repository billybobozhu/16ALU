/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module adder_9 (
    input [15:0] a,
    input [15:0] b,
    input [5:0] alufn,
    output reg [15:0] s,
    output reg z,
    output reg v,
    output reg n,
    output reg overflow
  );
  
  
  
  reg [15:0] temporary;
  
  reg [15:0] compute;
  
  always @* begin
    
    case (alufn[0+1-:2])
      2'h0: begin
        temporary = a + b;
      end
      2'h1: begin
        temporary = a - b;
      end
      2'h2: begin
        temporary = a * b;
      end
      2'h3: begin
        temporary = a - (a / b * b);
      end
      default: begin
        temporary = a + b;
      end
    endcase
    compute = a - b;
    overflow = (a[15+0-:1] & b[15+0-:1] & ~temporary[15+0-:1]) | (~a[15+0-:1] & ~b[15+0-:1] & temporary[15+0-:1]);
    v = (a[15+0-:1] & ~b[15+0-:1] & (~compute[15+0-:1])) | ((~a[15+0-:1]) & (b[15+0-:1]) & compute[15+0-:1]);
    n = compute[15+0-:1];
    z = (~|compute);
    s = temporary;
  end
endmodule
